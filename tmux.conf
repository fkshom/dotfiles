# デフォルトのPrefix(C-b)を解除
unbind C-b

# Prefixを設定
set -g prefix C-t

# C-t*2でtmux内のプログラムにC-tを送る
bind C-t send-prefix

# 一般
set -g default-terminal "screen-256color"
set-option -sa terminal-overrides ",xterm*:Tc"
set-option -ga terminal-overrides ",xterm-256color:Tc"
set -s escape-time 0
set -g repeat-time 500
setw -g allow-rename off
setw -g automatic-rename off
setw -g aggressive-resize on

#set -g set-titles on
#set -g set-titles-string "[tmux] #T @ #H"

#set -g status on
##set -g status-utf8 on
#set -g status-interval 2

# https://qiita.com/nojima/items/9bc576c922da3604a72b

# status line を更新する間隔を 1 秒にする
set-option -g status-interval 1

# window-status を中央揃えで配置する
set-option -g status-justify "centre"
set-option -g status-justify "left"

# status line のスタイルを指定する。
set -g status-style fg=colour255,bg=colour238

# status-left の最大の長さを指定する。
set-option -g status-left-length 20

# status-left のフォーマットを指定する。
set-option -g status-left "#[fg=colour255,bg=colour241] #S #[default]"

# status-right の最大の長さを指定する。
set-option -g status-right-length 60

# status-right のフォーマットを指定する。
set-option -g status-right "#[fg=colour255,bg=colour241] #h | LA: #(cut -d' ' -f-3 /proc/loadavg) | %m/%d %H:%M:%S#[default]"

# window-status のフォーマットを指定する。
set-window-option -g window-status-format " #I: #W "

# カレントウィンドウの window-status のフォーマットを指定する
set-window-option -g window-status-current-format "#[fg=colour255,bg=colour27,bold] #I: #W #[default]"

# 非アクティブウィンドウの背景色を薄くする
# https://stackoverflow.com/questions/25532773/change-background-color-of-active-or-inactive-pane-in-tmux
#set -g window-style 'fg=colour247,bg=colour236'
#set -g window-active-style 'fg=colour250,bg=black'
set -g window-style 'bg=colour236'
set -g window-active-style 'bg=black'


# マウスサポートon
set -g mouse on 

# マウスでペイン移動

#ヒストリーサイズ
set -g history-limit 100000

# キーバインドモード
setw -g mode-keys vi
bind p paste-buffer
bind C-p choose-buffer
bind -n M-Up copy-mode
bind -T copy-mode-vi M-Up        send-keys -X scroll-up
bind -T copy-mode-vi M-Down      send-keys -X scroll-down
bind -T copy-mode-vi M-PageUp    send-keys -X halfpage-up
bind -T copy-mode-vi M-PageDown  send-keys -X halfpage-down
bind -T copy-mode-vi PageDown    send-keys -X page-down
bind -T copy-mode-vi PageUp      send-keys -X page-up

set -g @copy_use_osc52_fallback on
yank="~/.tmux/yank.sh"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection-no-clear
bind -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X clear-selection-no-clear

# Copy selected text
bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi Y send-keys -X copy-line \;\
    run "tmux save-buffer - | $yank"
bind-key -T copy-mode-vi D send-keys -X copy-end-of-line \;\
    run "tmux save-buffer - | $yank"
bind -T copy-mode-vi C-j send-keys -X copy-pipe-and-cancel "$yank"
bind-key -T copy-mode-vi A send-keys -X append-selection-and-cancel \;\
    run "tmux save-buffer - | $yank"

unbind-key -T copy-mode MouseDrag1Pane
unbind-key -T root MouseDrag1Pane

# split window
bind - split-window -v -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'
unbind '"'
unbind %

# create window and retain cwd
bind c new-window -c '#{pane_current_path}'

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# select pane
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -n S-left select-pane -L
bind -n S-down select-pane -D
bind -n S-up select-pane -U
bind -n S-right select-pane -R
bind -n C-o select-pane -t :.+

# resize pane
bind -r H resize-pane -L 1
bind -r L resize-pane -R 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1

# select window
bind -n M-1 select-window -t :1
bind -n M-2 select-window -t :2
bind -n M-3 select-window -t :3
bind -n M-4 select-window -t :4
bind -n M-5 select-window -t :5
bind -n M-6 select-window -t :6
bind -n M-7 select-window -t :7
bind -n M-8 select-window -t :8
bind -n M-9 select-window -t :9
bind -n M-PageUp previous-window
bind -n M-PageDown next-window

run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | \
             sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

# swap window
if-shell 'bash -c "[[ $TMUX_VERSION < 3.5 ]]"' " \
    bind -r C-[ swap-window -t -1 \\; previous-window; \
    bind -r C-] swap-window -t +1 \\; next-window; \
    "
if-shell 'bash -c "[[ $TMUX_VERSION < 3.0 ]]"' " \
    bind -r C-[ swap-window -t -1; \
    bind -r C-] swap-window -t +1; \
    "

# send-pane
bind M choose-tree -Zw "join-pane -t '%%'"
bind ! break-pane

# nested tmux
bind -n C-q send-prefix

# UTF-8を有効にする
#setw -g utf8 on
#set -g status-utf8 on

# 設定ファイルの再読み込み
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"

# ウィンドウ名が実行中のコマンド名になるのを止める
setw -g automatic-rename off

# ウィンドウの開始番号を1にする
set -g base-index 1

# ペインの開始番号を1にする
set -g pane-base-index 1


# 固有設定の読み込み
if "test -e ~/.tmux.conf.local" "source-file ~/.tmux.conf.local"
if "test -e ~/.tmux/colorscheme.conf" "source-file ~/.tmux/colorscheme.conf"

# Feel free to NOT use this variables at all (remove, rename)
# this are named colors, just for convenience
# https://jonasjacek.github.io/colors/
color_orange=colour166 # 208, 166
color_purple=colour134 # 135, 134
color_green=colour76 # 070
color_deepskyblue1=colour39
color_yellow=colour220
color_red=colour160
color_black=colour232
color_white=white
color_grey=colour241
color_dodgerblue2=colour27

# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_deepskyblue1"
color_status_text=colour245
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator=colour088
color_window_off_status_bg=colour238
color_window_off_status_current_bg=colour254
wg_session="#[fg=$color_session_text] #S #[default]"
wg_date="#[fg=$color_secondary]%m/%d %H:%M:%S#[default]"
wg_user_host="#[fg=$color_secondary]#(whoami)#[default]@#H"
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"


set -g window-status-separator ""
separator_left="["
separator_right="]"
set -g status-left "$wg_session"
set -g status-right "$wg_is_keys_off $wg_user_host $wg_date"

bind -T root F12  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_left#[default]#I: #W#[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-format \;\
  set -u window-status-current-style \;\
